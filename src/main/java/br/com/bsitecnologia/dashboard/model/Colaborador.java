package br.com.bsitecnologia.dashboard.model;

// Generated 01/09/2012 15:14:43 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Colaborador generated by hbm2java
 */
@Entity
@Table(name = "Colaborador", catalog = "dashboard", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
public class Colaborador implements java.io.Serializable {

	private static final long serialVersionUID = 3878132230598112519L;
	
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Integer id;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "equipe", nullable = false)
	private Equipe equipe;
	
	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "colaboradorPai")
	private Colaborador colaboradorPai;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cargo", nullable = false)
	private Cargo cargo;
	
	@Column(name = "nome", length = 100)
	private String nome;
	
	@Column(name = "localAlocacao", length = 45)
	private String localAlocacao;
	
	@Column(name = "telefone", length = 11)
	private String telefone;
	
	@Column(name = "email", unique = true, nullable = false, length = 100)
	private String email;
	
	@Column(name = "remuneracao", precision = 8)
	private BigDecimal remuneracao;
	
	@Column(name = "senha", nullable = false, length = 32)
	private String senha;
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaborador")
	private List<ColaboradorProjeto> colaboradorProjetos = new ArrayList<ColaboradorProjeto>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaborador")
	private List<EmailTemplateColaboradores> emailTemplateColaboradoreses = new ArrayList<EmailTemplateColaboradores>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorRelacionadoImpedimento")
	private List<Impedimento> impedimentosRelacionados = new ArrayList<Impedimento>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaborador")
	private List<HistoricoProjeto> historicoProjetos = new ArrayList<HistoricoProjeto>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorAutor")
	private List<Impedimento> impedimentosAutor = new ArrayList<Impedimento>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaborador")
	private List<Comentario> comentarios = new ArrayList<Comentario>(0);

	public Colaborador() {
	}

	public Colaborador(Equipe equipe, Cargo cargo, String email, String senha) {
		this.equipe = equipe;
		this.cargo = cargo;
		this.email = email;
		this.senha = senha;
	}

	public Colaborador(Equipe equipe, Colaborador colaboradorPai, Cargo cargo,
			String nome, String localAlocacao, String telefone, String email,
			BigDecimal remuneracao, String senha,
			List<ColaboradorProjeto> colaboradorProjetos,
			List<EmailTemplateColaboradores> emailTemplateColaboradoreses,
			List<Impedimento> impedimentosRelacionados,
			List<HistoricoProjeto> historicoProjetos,
			List<Impedimento> impedimentosForColaboradorAutor,
			List<Comentario> comentarios) {
		this.equipe = equipe;
		this.colaboradorPai = colaboradorPai;
		this.cargo = cargo;
		this.nome = nome;
		this.localAlocacao = localAlocacao;
		this.telefone = telefone;
		this.email = email;
		this.remuneracao = remuneracao;
		this.senha = senha;
		this.colaboradorProjetos = colaboradorProjetos;
		this.emailTemplateColaboradoreses = emailTemplateColaboradoreses;
		this.impedimentosRelacionados = impedimentosRelacionados;
		this.historicoProjetos = historicoProjetos;
		this.impedimentosAutor = impedimentosForColaboradorAutor;
		this.comentarios = comentarios;
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Equipe getEquipe() {
		return this.equipe;
	}

	public void setEquipe(Equipe equipe) {
		this.equipe = equipe;
	}

	public Colaborador getColaboradorPai() {
		return this.colaboradorPai;
	}

	public void setColaboradorPai(Colaborador colaboradorPai) {
		this.colaboradorPai = colaboradorPai;
	}

	public Cargo getCargo() {
		return this.cargo;
	}

	public void setCargo(Cargo cargo) {
		this.cargo = cargo;
	}

	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public String getLocalAlocacao() {
		return this.localAlocacao;
	}

	public void setLocalAlocacao(String localAlocacao) {
		this.localAlocacao = localAlocacao;
	}

	public String getTelefone() {
		return this.telefone;
	}

	public void setTelefone(String telefone) {
		this.telefone = telefone;
	}

	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public BigDecimal getRemuneracao() {
		return this.remuneracao;
	}

	public void setRemuneracao(BigDecimal remuneracao) {
		this.remuneracao = remuneracao;
	}

	public String getSenha() {
		return this.senha;
	}

	public void setSenha(String senha) {
		this.senha = senha;
	}

	public List<ColaboradorProjeto> getColaboradorProjetos() {
		return this.colaboradorProjetos;
	}

	public void setColaboradorProjetos(
			List<ColaboradorProjeto> colaboradorProjetos) {
		this.colaboradorProjetos = colaboradorProjetos;
	}

	public List<EmailTemplateColaboradores> getEmailTemplateColaboradoreses() {
		return this.emailTemplateColaboradoreses;
	}

	public void setEmailTemplateColaboradoreses(List<EmailTemplateColaboradores> emailTemplateColaboradoreses) {
		this.emailTemplateColaboradoreses = emailTemplateColaboradoreses;
	}

	public List<Impedimento> getImpedimentosRelacionados() {
		return this.impedimentosRelacionados;
	}

	public void setImpedimentosRelacionados(List<Impedimento> impedimentosRelacionados) {
		this.impedimentosRelacionados = impedimentosRelacionados;
	}
	
	public List<HistoricoProjeto> getHistoricoProjetos() {
		return this.historicoProjetos;
	}

	public void setHistoricoProjetos(List<HistoricoProjeto> historicoProjetos) {
		this.historicoProjetos = historicoProjetos;
	}

	public List<Impedimento> getImpedimentosForColaboradorAutor() {
		return this.impedimentosAutor;
	}

	public void setImpedimentosForColaboradorAutor(List<Impedimento> impedimentosForColaboradorAutor) {
		this.impedimentosAutor = impedimentosForColaboradorAutor;
	}

	public List<Comentario> getComentarios() {
		return this.comentarios;
	}

	public void setComentarios(List<Comentario> comentarios) {
		this.comentarios = comentarios;
	}

}
