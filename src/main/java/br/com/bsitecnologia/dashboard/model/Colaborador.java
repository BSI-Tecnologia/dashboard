package br.com.bsitecnologia.dashboard.model;
// Generated 01/09/2012 11:28:22 by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Colaborador generated by hbm2java
 */
@Entity
@Table(name="Colaborador"
    ,catalog="dashboard"
    , uniqueConstraints = @UniqueConstraint(columnNames="email") 
)
public class Colaborador  implements java.io.Serializable {


     private Integer id;
     private Equipe equipe;
     private Colaborador colaborador;
     private Cargo cargo;
     private String nome;
     private String localAlocacao;
     private String telefone;
     private String email;
     private BigDecimal remuneracao;
     private String senha;
     private Set<Colaborador> colaboradors = new HashSet<Colaborador>(0);
     private Set<ColaboradorProjeto> colaboradorProjetos = new HashSet<ColaboradorProjeto>(0);
     private Set<EmailTemplateColaboradores> emailTemplateColaboradoreses = new HashSet<EmailTemplateColaboradores>(0);
     private Set<Impedimento> impedimentosForColaboradorImpedimento = new HashSet<Impedimento>(0);
     private Set<HistoricoProjeto> historicoProjetos = new HashSet<HistoricoProjeto>(0);
     private Set<Impedimento> impedimentosForColaboradorAutor = new HashSet<Impedimento>(0);
     private Set<Comentario> comentarios = new HashSet<Comentario>(0);

    public Colaborador() {
    }

	
    public Colaborador(Equipe equipe, Cargo cargo, String email, String senha) {
        this.equipe = equipe;
        this.cargo = cargo;
        this.email = email;
        this.senha = senha;
    }
    public Colaborador(Equipe equipe, Colaborador colaborador, Cargo cargo, String nome, String localAlocacao, String telefone, String email, BigDecimal remuneracao, String senha, Set<Colaborador> colaboradors, Set<ColaboradorProjeto> colaboradorProjetos, Set<EmailTemplateColaboradores> emailTemplateColaboradoreses, Set<Impedimento> impedimentosForColaboradorImpedimento, Set<HistoricoProjeto> historicoProjetos, Set<Impedimento> impedimentosForColaboradorAutor, Set<Comentario> comentarios) {
       this.equipe = equipe;
       this.colaborador = colaborador;
       this.cargo = cargo;
       this.nome = nome;
       this.localAlocacao = localAlocacao;
       this.telefone = telefone;
       this.email = email;
       this.remuneracao = remuneracao;
       this.senha = senha;
       this.colaboradors = colaboradors;
       this.colaboradorProjetos = colaboradorProjetos;
       this.emailTemplateColaboradoreses = emailTemplateColaboradoreses;
       this.impedimentosForColaboradorImpedimento = impedimentosForColaboradorImpedimento;
       this.historicoProjetos = historicoProjetos;
       this.impedimentosForColaboradorAutor = impedimentosForColaboradorAutor;
       this.comentarios = comentarios;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="equipe", nullable=false)
    public Equipe getEquipe() {
        return this.equipe;
    }
    
    public void setEquipe(Equipe equipe) {
        this.equipe = equipe;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="colaboradorPai")
    public Colaborador getColaborador() {
        return this.colaborador;
    }
    
    public void setColaborador(Colaborador colaborador) {
        this.colaborador = colaborador;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cargo", nullable=false)
    public Cargo getCargo() {
        return this.cargo;
    }
    
    public void setCargo(Cargo cargo) {
        this.cargo = cargo;
    }

    
    @Column(name="nome", length=100)
    public String getNome() {
        return this.nome;
    }
    
    public void setNome(String nome) {
        this.nome = nome;
    }

    
    @Column(name="localAlocacao", length=45)
    public String getLocalAlocacao() {
        return this.localAlocacao;
    }
    
    public void setLocalAlocacao(String localAlocacao) {
        this.localAlocacao = localAlocacao;
    }

    
    @Column(name="telefone", length=11)
    public String getTelefone() {
        return this.telefone;
    }
    
    public void setTelefone(String telefone) {
        this.telefone = telefone;
    }

    
    @Column(name="email", unique=true, nullable=false, length=100)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="remuneracao", precision=8)
    public BigDecimal getRemuneracao() {
        return this.remuneracao;
    }
    
    public void setRemuneracao(BigDecimal remuneracao) {
        this.remuneracao = remuneracao;
    }

    
    @Column(name="senha", nullable=false, length=20)
    public String getSenha() {
        return this.senha;
    }
    
    public void setSenha(String senha) {
        this.senha = senha;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colaborador")
    public Set<Colaborador> getColaboradors() {
        return this.colaboradors;
    }
    
    public void setColaboradors(Set<Colaborador> colaboradors) {
        this.colaboradors = colaboradors;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colaborador")
    public Set<ColaboradorProjeto> getColaboradorProjetos() {
        return this.colaboradorProjetos;
    }
    
    public void setColaboradorProjetos(Set<ColaboradorProjeto> colaboradorProjetos) {
        this.colaboradorProjetos = colaboradorProjetos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colaborador")
    public Set<EmailTemplateColaboradores> getEmailTemplateColaboradoreses() {
        return this.emailTemplateColaboradoreses;
    }
    
    public void setEmailTemplateColaboradoreses(Set<EmailTemplateColaboradores> emailTemplateColaboradoreses) {
        this.emailTemplateColaboradoreses = emailTemplateColaboradoreses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colaboradorByColaboradorImpedimento")
    public Set<Impedimento> getImpedimentosForColaboradorImpedimento() {
        return this.impedimentosForColaboradorImpedimento;
    }
    
    public void setImpedimentosForColaboradorImpedimento(Set<Impedimento> impedimentosForColaboradorImpedimento) {
        this.impedimentosForColaboradorImpedimento = impedimentosForColaboradorImpedimento;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colaborador")
    public Set<HistoricoProjeto> getHistoricoProjetos() {
        return this.historicoProjetos;
    }
    
    public void setHistoricoProjetos(Set<HistoricoProjeto> historicoProjetos) {
        this.historicoProjetos = historicoProjetos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colaboradorByColaboradorAutor")
    public Set<Impedimento> getImpedimentosForColaboradorAutor() {
        return this.impedimentosForColaboradorAutor;
    }
    
    public void setImpedimentosForColaboradorAutor(Set<Impedimento> impedimentosForColaboradorAutor) {
        this.impedimentosForColaboradorAutor = impedimentosForColaboradorAutor;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colaborador")
    public Set<Comentario> getComentarios() {
        return this.comentarios;
    }
    
    public void setComentarios(Set<Comentario> comentarios) {
        this.comentarios = comentarios;
    }




}


