package br.com.bsitecnologia.dashboard.model;

// Generated 01/09/2012 15:14:43 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ColaboradorProjeto generated by hbm2java
 */
@Entity
@Table(name = "ColaboradorProjeto", catalog = "dashboard")
public class ColaboradorProjeto implements java.io.Serializable {

	private static final long serialVersionUID = -1108991637533934517L;

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Integer id;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "projeto", nullable = false)
	private Projeto projeto;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "colaborador", nullable = false)
	private Colaborador colaborador;
	
	@Column(name = "cargaHoraria")
	private Integer cargaHoraria;
	
	@Temporal(TemporalType.DATE)
	@Column(name = "dataInicio", length = 10)
	private Date dataInicio;
	
	@Temporal(TemporalType.DATE)
	@Column(name = "dataFim", length = 10)
	private Date dataFim;
	
	@Column(name = "quantidadeHoras")
	private Integer quantidadeHoras;
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorAtualizacao")
	private List<Artefato> artefatosColaboradorAtualizacao = new ArrayList<Artefato>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "colaboradorCriacao")
	private List<Artefato> artefatosColaboradorCriacao = new ArrayList<Artefato>(0);

	public ColaboradorProjeto() {
	}

	public ColaboradorProjeto(Projeto projeto, Colaborador colaborador) {
		this.projeto = projeto;
		this.colaborador = colaborador;
	}

	public ColaboradorProjeto(Projeto projeto, Colaborador colaborador,
			Integer cargaHoraria, Date dataInicio, Date dataFim,
			Integer quantidadeHoras,
			List<Artefato> artefatosColaboradorAtualizacao,
			List<Artefato> artefatosColaboradorCriacao) {
		this.projeto = projeto;
		this.colaborador = colaborador;
		this.cargaHoraria = cargaHoraria;
		this.dataInicio = dataInicio;
		this.dataFim = dataFim;
		this.quantidadeHoras = quantidadeHoras;
		this.artefatosColaboradorAtualizacao = artefatosColaboradorAtualizacao;
		this.artefatosColaboradorCriacao = artefatosColaboradorCriacao;
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Projeto getProjeto() {
		return this.projeto;
	}

	public void setProjeto(Projeto projeto) {
		this.projeto = projeto;
	}

	public Colaborador getColaborador() {
		return this.colaborador;
	}

	public void setColaborador(Colaborador colaborador) {
		this.colaborador = colaborador;
	}

	public Integer getCargaHoraria() {
		return this.cargaHoraria;
	}

	public void setCargaHoraria(Integer cargaHoraria) {
		this.cargaHoraria = cargaHoraria;
	}

	public Date getDataInicio() {
		return this.dataInicio;
	}

	public void setDataInicio(Date dataInicio) {
		this.dataInicio = dataInicio;
	}

	public Date getDataFim() {
		return this.dataFim;
	}

	public void setDataFim(Date dataFim) {
		this.dataFim = dataFim;
	}

	public Integer getQuantidadeHoras() {
		return this.quantidadeHoras;
	}

	public void setQuantidadeHoras(Integer quantidadeHoras) {
		this.quantidadeHoras = quantidadeHoras;
	}

	public List<Artefato> getArtefatosForColaboradorAtualizacao() {
		return this.artefatosColaboradorAtualizacao;
	}

	public void setArtefatosForColaboradorAtualizacao(List<Artefato> artefatosForColaboradorAtualizacao) {
		this.artefatosColaboradorAtualizacao = artefatosForColaboradorAtualizacao;
	}

	public List<Artefato> getArtefatosForColaboradorCriacao() {
		return this.artefatosColaboradorCriacao;
	}

	public void setArtefatosForColaboradorCriacao(List<Artefato> artefatosForColaboradorCriacao) {
		this.artefatosColaboradorCriacao = artefatosForColaboradorCriacao;
	}

}
