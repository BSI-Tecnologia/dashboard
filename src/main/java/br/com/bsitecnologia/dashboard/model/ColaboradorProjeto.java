package br.com.bsitecnologia.dashboard.model;
// Generated 01/09/2012 11:28:22 by Hibernate Tools 3.4.0.CR1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ColaboradorProjeto generated by hbm2java
 */
@Entity
@Table(name="ColaboradorProjeto"
    ,catalog="dashboard"
)
public class ColaboradorProjeto  implements java.io.Serializable {


     private Integer id;
     private Projeto projeto;
     private Colaborador colaborador;
     private Integer cargaHoraria;
     private Date dataInicio;
     private Date dataFim;
     private Integer quantidadeHoras;
     private Set<Artefato> artefatosForColaboradorAtualizacao = new HashSet<Artefato>(0);
     private Set<Artefato> artefatosForColaboradorCriacao = new HashSet<Artefato>(0);

    public ColaboradorProjeto() {
    }

	
    public ColaboradorProjeto(Projeto projeto, Colaborador colaborador) {
        this.projeto = projeto;
        this.colaborador = colaborador;
    }
    public ColaboradorProjeto(Projeto projeto, Colaborador colaborador, Integer cargaHoraria, Date dataInicio, Date dataFim, Integer quantidadeHoras, Set<Artefato> artefatosForColaboradorAtualizacao, Set<Artefato> artefatosForColaboradorCriacao) {
       this.projeto = projeto;
       this.colaborador = colaborador;
       this.cargaHoraria = cargaHoraria;
       this.dataInicio = dataInicio;
       this.dataFim = dataFim;
       this.quantidadeHoras = quantidadeHoras;
       this.artefatosForColaboradorAtualizacao = artefatosForColaboradorAtualizacao;
       this.artefatosForColaboradorCriacao = artefatosForColaboradorCriacao;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="projeto", nullable=false)
    public Projeto getProjeto() {
        return this.projeto;
    }
    
    public void setProjeto(Projeto projeto) {
        this.projeto = projeto;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="colaborador", nullable=false)
    public Colaborador getColaborador() {
        return this.colaborador;
    }
    
    public void setColaborador(Colaborador colaborador) {
        this.colaborador = colaborador;
    }

    
    @Column(name="cargaHoraria")
    public Integer getCargaHoraria() {
        return this.cargaHoraria;
    }
    
    public void setCargaHoraria(Integer cargaHoraria) {
        this.cargaHoraria = cargaHoraria;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="dataInicio", length=10)
    public Date getDataInicio() {
        return this.dataInicio;
    }
    
    public void setDataInicio(Date dataInicio) {
        this.dataInicio = dataInicio;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="dataFim", length=10)
    public Date getDataFim() {
        return this.dataFim;
    }
    
    public void setDataFim(Date dataFim) {
        this.dataFim = dataFim;
    }

    
    @Column(name="quantidadeHoras")
    public Integer getQuantidadeHoras() {
        return this.quantidadeHoras;
    }
    
    public void setQuantidadeHoras(Integer quantidadeHoras) {
        this.quantidadeHoras = quantidadeHoras;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colaboradorProjetoByColaboradorAtualizacao")
    public Set<Artefato> getArtefatosForColaboradorAtualizacao() {
        return this.artefatosForColaboradorAtualizacao;
    }
    
    public void setArtefatosForColaboradorAtualizacao(Set<Artefato> artefatosForColaboradorAtualizacao) {
        this.artefatosForColaboradorAtualizacao = artefatosForColaboradorAtualizacao;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="colaboradorProjetoByColaboradorCriacao")
    public Set<Artefato> getArtefatosForColaboradorCriacao() {
        return this.artefatosForColaboradorCriacao;
    }
    
    public void setArtefatosForColaboradorCriacao(Set<Artefato> artefatosForColaboradorCriacao) {
        this.artefatosForColaboradorCriacao = artefatosForColaboradorCriacao;
    }




}


