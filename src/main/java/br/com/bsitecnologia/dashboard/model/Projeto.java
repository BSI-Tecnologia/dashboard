package br.com.bsitecnologia.dashboard.model;
// Generated 01/09/2012 11:28:22 by Hibernate Tools 3.4.0.CR1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Projeto generated by hbm2java
 */
@Entity
@Table(name="Projeto"
    ,catalog="dashboard"
    , uniqueConstraints = @UniqueConstraint(columnNames="nome") 
)
public class Projeto  implements java.io.Serializable {


     private Integer id;
     private Projeto projeto;
     private Status status;
     private String nome;
     private Date dataInicio;
     private Date dataFim;
     private Date dataPrevisaoConclusao;
     private BigDecimal orcamento;
     private BigDecimal custo;
     private Set<HistoricoProjeto> historicoProjetos = new HashSet<HistoricoProjeto>(0);
     private Set<AtorExternoTransicaoStatus> atorExternoTransicaoStatuses = new HashSet<AtorExternoTransicaoStatus>(0);
     private Set<ColaboradorProjeto> colaboradorProjetos = new HashSet<ColaboradorProjeto>(0);
     private Set<Comentario> comentarios = new HashSet<Comentario>(0);
     private Set<EquipeProjeto> equipeProjetos = new HashSet<EquipeProjeto>(0);
     private Set<AlertaProjeto> alertaProjetos = new HashSet<AlertaProjeto>(0);
     private Set<Artefato> artefatos = new HashSet<Artefato>(0);
     private Set<Projeto> projetos = new HashSet<Projeto>(0);
     private Set<Impedimento> impedimentos = new HashSet<Impedimento>(0);

    public Projeto() {
    }

	
    public Projeto(Status status, String nome) {
        this.status = status;
        this.nome = nome;
    }
    public Projeto(Projeto projeto, Status status, String nome, Date dataInicio, Date dataFim, Date dataPrevisaoConclusao, BigDecimal orcamento, BigDecimal custo, Set<HistoricoProjeto> historicoProjetos, Set<AtorExternoTransicaoStatus> atorExternoTransicaoStatuses, Set<ColaboradorProjeto> colaboradorProjetos, Set<Comentario> comentarios, Set<EquipeProjeto> equipeProjetos, Set<AlertaProjeto> alertaProjetos, Set<Artefato> artefatos, Set<Projeto> projetos, Set<Impedimento> impedimentos) {
       this.projeto = projeto;
       this.status = status;
       this.nome = nome;
       this.dataInicio = dataInicio;
       this.dataFim = dataFim;
       this.dataPrevisaoConclusao = dataPrevisaoConclusao;
       this.orcamento = orcamento;
       this.custo = custo;
       this.historicoProjetos = historicoProjetos;
       this.atorExternoTransicaoStatuses = atorExternoTransicaoStatuses;
       this.colaboradorProjetos = colaboradorProjetos;
       this.comentarios = comentarios;
       this.equipeProjetos = equipeProjetos;
       this.alertaProjetos = alertaProjetos;
       this.artefatos = artefatos;
       this.projetos = projetos;
       this.impedimentos = impedimentos;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="projetoPai")
    public Projeto getProjeto() {
        return this.projeto;
    }
    
    public void setProjeto(Projeto projeto) {
        this.projeto = projeto;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="status", nullable=false)
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

    
    @Column(name="nome", unique=true, nullable=false, length=45)
    public String getNome() {
        return this.nome;
    }
    
    public void setNome(String nome) {
        this.nome = nome;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="dataInicio", length=10)
    public Date getDataInicio() {
        return this.dataInicio;
    }
    
    public void setDataInicio(Date dataInicio) {
        this.dataInicio = dataInicio;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="dataFim", length=10)
    public Date getDataFim() {
        return this.dataFim;
    }
    
    public void setDataFim(Date dataFim) {
        this.dataFim = dataFim;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="dataPrevisaoConclusao", length=10)
    public Date getDataPrevisaoConclusao() {
        return this.dataPrevisaoConclusao;
    }
    
    public void setDataPrevisaoConclusao(Date dataPrevisaoConclusao) {
        this.dataPrevisaoConclusao = dataPrevisaoConclusao;
    }

    
    @Column(name="orcamento", precision=11)
    public BigDecimal getOrcamento() {
        return this.orcamento;
    }
    
    public void setOrcamento(BigDecimal orcamento) {
        this.orcamento = orcamento;
    }

    
    @Column(name="custo", precision=11)
    public BigDecimal getCusto() {
        return this.custo;
    }
    
    public void setCusto(BigDecimal custo) {
        this.custo = custo;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="projeto")
    public Set<HistoricoProjeto> getHistoricoProjetos() {
        return this.historicoProjetos;
    }
    
    public void setHistoricoProjetos(Set<HistoricoProjeto> historicoProjetos) {
        this.historicoProjetos = historicoProjetos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="projeto")
    public Set<AtorExternoTransicaoStatus> getAtorExternoTransicaoStatuses() {
        return this.atorExternoTransicaoStatuses;
    }
    
    public void setAtorExternoTransicaoStatuses(Set<AtorExternoTransicaoStatus> atorExternoTransicaoStatuses) {
        this.atorExternoTransicaoStatuses = atorExternoTransicaoStatuses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="projeto")
    public Set<ColaboradorProjeto> getColaboradorProjetos() {
        return this.colaboradorProjetos;
    }
    
    public void setColaboradorProjetos(Set<ColaboradorProjeto> colaboradorProjetos) {
        this.colaboradorProjetos = colaboradorProjetos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="projeto")
    public Set<Comentario> getComentarios() {
        return this.comentarios;
    }
    
    public void setComentarios(Set<Comentario> comentarios) {
        this.comentarios = comentarios;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="projeto")
    public Set<EquipeProjeto> getEquipeProjetos() {
        return this.equipeProjetos;
    }
    
    public void setEquipeProjetos(Set<EquipeProjeto> equipeProjetos) {
        this.equipeProjetos = equipeProjetos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="projeto")
    public Set<AlertaProjeto> getAlertaProjetos() {
        return this.alertaProjetos;
    }
    
    public void setAlertaProjetos(Set<AlertaProjeto> alertaProjetos) {
        this.alertaProjetos = alertaProjetos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="projeto")
    public Set<Artefato> getArtefatos() {
        return this.artefatos;
    }
    
    public void setArtefatos(Set<Artefato> artefatos) {
        this.artefatos = artefatos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="projeto")
    public Set<Projeto> getProjetos() {
        return this.projetos;
    }
    
    public void setProjetos(Set<Projeto> projetos) {
        this.projetos = projetos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="projeto")
    public Set<Impedimento> getImpedimentos() {
        return this.impedimentos;
    }
    
    public void setImpedimentos(Set<Impedimento> impedimentos) {
        this.impedimentos = impedimentos;
    }




}


