package br.com.bsitecnologia.dashboard.model;

// Generated 01/09/2012 15:14:43 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Projeto generated by hbm2java
 */
@Entity
@Table(name = "Projeto", catalog = "dashboard", uniqueConstraints = @UniqueConstraint(columnNames = "nome"))
public class Projeto implements java.io.Serializable {

	private static final long serialVersionUID = 3277714575988445344L;
	
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Integer id;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "projetoPai")
	private Projeto projetoPai;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status", nullable = false)
	private Status status;
	
	@Column(name = "nome", unique = true, nullable = false, length = 45)
	private String nome;
	
	@Temporal(TemporalType.DATE)
	@Column(name = "dataInicio", length = 10)
	private Date dataInicio;
	
	@Temporal(TemporalType.DATE)
	@Column(name = "dataFim", length = 10)
	private Date dataFim;
	
	@Temporal(TemporalType.DATE)
	@Column(name = "dataPrevisaoConclusao", length = 10)
	private Date dataPrevisaoConclusao;
	
	@Column(name = "orcamento", precision = 11)
	private BigDecimal orcamento;
	
	@Column(name = "custo", precision = 11)
	private BigDecimal custo;
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projeto")
	private List<HistoricoProjeto> historicoProjetos = new ArrayList<HistoricoProjeto>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projeto")
	private List<AtorExternoTransicaoStatus> atorExternoTransicaoStatus = new ArrayList<AtorExternoTransicaoStatus>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projeto")
	private List<ColaboradorProjeto> colaboradorProjetos = new ArrayList<ColaboradorProjeto>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projeto")
	private List<Comentario> comentarios = new ArrayList<Comentario>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projeto")
	private List<EquipeProjeto> equipeProjetos = new ArrayList<EquipeProjeto>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projeto")
	private List<AlertaProjeto> alertaProjetos = new ArrayList<AlertaProjeto>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projeto")
	private List<Artefato> artefatos = new ArrayList<Artefato>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projetoPai")
	private List<Projeto> projetosFilhos = new ArrayList<Projeto>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projeto")
	private List<Impedimento> impedimentos = new ArrayList<Impedimento>(0);

	public Projeto() {
	}

	public Projeto(Status status, String nome) {
		this.status = status;
		this.nome = nome;
	}

	public Projeto(Projeto projetoPai, Status status, String nome,
			Date dataInicio, Date dataFim, Date dataPrevisaoConclusao,
			BigDecimal orcamento, BigDecimal custo,
			List<HistoricoProjeto> historicoProjetos,
			List<AtorExternoTransicaoStatus> atorExternoTransicaoStatus,
			List<ColaboradorProjeto> colaboradorProjetos,
			List<Comentario> comentarios, List<EquipeProjeto> equipeProjetos,
			List<AlertaProjeto> alertaProjetos, List<Artefato> artefatos,
			List<Projeto> projetosFilhos, List<Impedimento> impedimentos) {
		this.projetoPai = projetoPai;
		this.status = status;
		this.nome = nome;
		this.dataInicio = dataInicio;
		this.dataFim = dataFim;
		this.dataPrevisaoConclusao = dataPrevisaoConclusao;
		this.orcamento = orcamento;
		this.custo = custo;
		this.historicoProjetos = historicoProjetos;
		this.atorExternoTransicaoStatus = atorExternoTransicaoStatus;
		this.colaboradorProjetos = colaboradorProjetos;
		this.comentarios = comentarios;
		this.equipeProjetos = equipeProjetos;
		this.alertaProjetos = alertaProjetos;
		this.artefatos = artefatos;
		this.projetosFilhos = projetosFilhos;
		this.impedimentos = impedimentos;
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Projeto getProjetoPai() {
		return this.projetoPai;
	}

	public void setProjetoPai(Projeto projetoPai) {
		this.projetoPai = projetoPai;
	}

	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public Date getDataInicio() {
		return this.dataInicio;
	}

	public void setDataInicio(Date dataInicio) {
		this.dataInicio = dataInicio;
	}

	public Date getDataFim() {
		return this.dataFim;
	}

	public void setDataFim(Date dataFim) {
		this.dataFim = dataFim;
	}

	public Date getDataPrevisaoConclusao() {
		return this.dataPrevisaoConclusao;
	}

	public void setDataPrevisaoConclusao(Date dataPrevisaoConclusao) {
		this.dataPrevisaoConclusao = dataPrevisaoConclusao;
	}

	public BigDecimal getOrcamento() {
		return this.orcamento;
	}

	public void setOrcamento(BigDecimal orcamento) {
		this.orcamento = orcamento;
	}

	public BigDecimal getCusto() {
		return this.custo;
	}

	public void setCusto(BigDecimal custo) {
		this.custo = custo;
	}

	public List<HistoricoProjeto> getHistoricoProjetos() {
		return this.historicoProjetos;
	}

	public void setHistoricoProjetos(List<HistoricoProjeto> historicoProjetos) {
		this.historicoProjetos = historicoProjetos;
	}

	public List<AtorExternoTransicaoStatus> getAtorExternoTransicaoStatus() {
		return this.atorExternoTransicaoStatus;
	}

	public void setAtorExternoTransicaoStatus(List<AtorExternoTransicaoStatus> atorExternoTransicaoStatus) {
		this.atorExternoTransicaoStatus = atorExternoTransicaoStatus;
	}

	public List<ColaboradorProjeto> getColaboradorProjetos() {
		return this.colaboradorProjetos;
	}

	public void setColaboradorProjetos(
			List<ColaboradorProjeto> colaboradorProjetos) {
		this.colaboradorProjetos = colaboradorProjetos;
	}

	public List<Comentario> getComentarios() {
		return this.comentarios;
	}

	public void setComentarios(List<Comentario> comentarios) {
		this.comentarios = comentarios;
	}

	public List<EquipeProjeto> getEquipeProjetos() {
		return this.equipeProjetos;
	}

	public void setEquipeProjetos(List<EquipeProjeto> equipeProjetos) {
		this.equipeProjetos = equipeProjetos;
	}

	public List<AlertaProjeto> getAlertaProjetos() {
		return this.alertaProjetos;
	}

	public void setAlertaProjetos(List<AlertaProjeto> alertaProjetos) {
		this.alertaProjetos = alertaProjetos;
	}

	public List<Artefato> getArtefatos() {
		return this.artefatos;
	}

	public void setArtefatos(List<Artefato> artefatos) {
		this.artefatos = artefatos;
	}

	public List<Projeto> getProjetosFilhos() {
		return this.projetosFilhos;
	}

	public void setProjetosFilhos(List<Projeto> projetosFilhos) {
		this.projetosFilhos = projetosFilhos;
	}

	public List<Impedimento> getImpedimentos() {
		return this.impedimentos;
	}

	public void setImpedimentos(List<Impedimento> impedimentos) {
		this.impedimentos = impedimentos;
	}

}
