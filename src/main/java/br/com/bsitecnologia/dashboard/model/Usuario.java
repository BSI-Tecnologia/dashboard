package br.com.bsitecnologia.dashboard.model;

// Generated 24/09/2012 20:18:49 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import br.com.bsitecnologia.dashboard.util.BaseEntity;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "Usuario", catalog = "dashboard", uniqueConstraints = @UniqueConstraint(columnNames = "login"))
public class Usuario implements Serializable, BaseEntity {

	private static final long serialVersionUID = 81526129019669014L;

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Integer id;
	
	@Column(name = "login", unique = true, nullable = false, length = 100)
	private String login;
	
	@Column(name = "senha", nullable = false, length = 86)
	private String senha;
	
	@Column(name = "isColaborador", nullable = false, columnDefinition = "BIT", length = 1)
	private boolean isColaborador;
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	private List<UsuarioAtorExterno> usuarioAtorExternos = new ArrayList<UsuarioAtorExterno>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	private List<UsuarioColaborador> usuarioColaboradors = new ArrayList<UsuarioColaborador>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	private List<AutorizacaoAtorExterno> autorizacaoAtorExternos = new ArrayList<AutorizacaoAtorExterno>(0);
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	private List<AutorizacaoColaborador> autorizacaoColaboradors = new ArrayList<AutorizacaoColaborador>(0);

	public Usuario() {
	}

	public Usuario(String login, String senha, boolean isColaborador) {
		this.login = login;
		this.senha = senha;
		this.isColaborador = isColaborador;
	}

	public Usuario(String login, String senha, boolean isColaborador,
			List<UsuarioAtorExterno> usuarioAtorExternos,
			List<UsuarioColaborador> usuarioColaboradors,
			List<AutorizacaoAtorExterno> autorizacaoAtorExternos,
			List<AutorizacaoColaborador> autorizacaoColaboradors) {
		this.login = login;
		this.senha = senha;
		this.isColaborador = isColaborador;
		this.usuarioAtorExternos = usuarioAtorExternos;
		this.usuarioColaboradors = usuarioColaboradors;
		this.autorizacaoAtorExternos = autorizacaoAtorExternos;
		this.autorizacaoColaboradors = autorizacaoColaboradors;
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	public String getSenha() {
		return this.senha;
	}

	public void setSenha(String senha) {
		this.senha = senha;
	}

	public boolean isIsColaborador() {
		return this.isColaborador;
	}

	public void setIsColaborador(boolean isColaborador) {
		this.isColaborador = isColaborador;
	}

	public List<UsuarioAtorExterno> getUsuarioAtorExternos() {
		return this.usuarioAtorExternos;
	}

	public void setUsuarioAtorExternos(
			List<UsuarioAtorExterno> usuarioAtorExternos) {
		this.usuarioAtorExternos = usuarioAtorExternos;
	}

	public List<UsuarioColaborador> getUsuarioColaboradors() {
		return this.usuarioColaboradors;
	}

	public void setUsuarioColaboradors(List<UsuarioColaborador> usuarioColaboradors) {
		this.usuarioColaboradors = usuarioColaboradors;
	}

	public List<AutorizacaoAtorExterno> getAutorizacaoAtorExternos() {
		return this.autorizacaoAtorExternos;
	}

	public void setAutorizacaoAtorExternos(List<AutorizacaoAtorExterno> autorizacaoAtorExternos) {
		this.autorizacaoAtorExternos = autorizacaoAtorExternos;
	}

	public List<AutorizacaoColaborador> getAutorizacaoColaboradors() {
		return this.autorizacaoColaboradors;
	}

	public void setAutorizacaoColaboradors(List<AutorizacaoColaborador> autorizacaoColaboradors) {
		this.autorizacaoColaboradors = autorizacaoColaboradors;
	}

	@Override
	public String getEntityDescription() {
		return login;
	}

}
